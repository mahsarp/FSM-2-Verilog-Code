// Note the Verilog-1995 module declaration syntax here:
module top_module(clk, reset, in, out);
    input clk;
    input reset;    // Synchronous reset to state B
    input in;
    output out;//  
    reg out;

    // Fill in state name declarations

    reg present_state, next_state;
  
   
    parameter A=0, B=1; //state encoding 
  

    always @(*) begin
        // State transition logic
       next_state=present_state;
        case(present_state) 
        B: begin
           if(in)
           
            next_state=B;
          
           else 
            next_state=A;
               
            
       end
       A: begin
           if(in) begin
                 next_state=A;
                
                   end
           else 
               
                next_state=B;
                 
       end   
   endcase
    end//always

    always @(posedge clk) begin
        // State flip-flops with asynchronous reset
        if( reset)
            begin
        present_state=B;
        
            end
        else
          present_state= next_state;
      
    end

    // Output logic
    assign out = (present_state ==A)? 1'b0: 1'b1 ;

endmodule

